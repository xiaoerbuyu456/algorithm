假设你正在爬楼梯。需要 n 阶你才能到达楼顶。

每次你可以爬 1 或 2 个台阶。你有多少种不同的方法可以爬到楼顶呢？

注意：给定 n 是一个正整数。
方法一：递归（占用资源太多，速度太慢）
int climbStairs(int n){
    int a=0;
    int b=1;
    int c=2;
    if(n==1)
        return b;
    else if(n==2)
		return c;
    else if(n>2)
        return climbStairs(n-1)+climbStairs(n-2);
}
方法二：动态规划
int climbStairs(int n){
    int count=0;
    int b=1;
    int c=2;
    if(n==1)
        return b;
    else if(n==2)
		return c;
    else if(n>2)
        for(int i=3;i<=n;i++)
        {
            count=b+c;
            b=c;
            c=count;
            
        }
    
    return count;
}
